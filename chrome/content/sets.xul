<?xml version="1.0"?>

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://handyclicks/content/style/setsCommon.css" type="text/css"?>
<?xml-stylesheet href="chrome://handyclicks/content/style/sets.css" type="text/css"?>
<?xml-stylesheet href='data:text/css,
/* Should be here for CSS reloader */
prefwindow {
	-moz-binding: url("chrome://handyclicks/content/prefwindow.xml%23prefwindow");
}
preferences {
	-moz-binding: url("chrome://handyclicks/content/prefwindow.xml%23preferences");
}
' type="text/css"?>

<?xul-overlay href="chrome://handyclicks/content/setsOverlay.xul"?>

<!DOCTYPE prefwindow [
	<!ENTITY % locale SYSTEM "chrome://handyclicks/locale/sets.dtd">
	%locale;
	<!ENTITY % default SYSTEM "chrome://handyclicks-locale/content/sets.dtd">
	%default;
]>

<prefwindow xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	id="handyClicks-settings"
	windowtype="handyclicks:settings"
	title="&hc.sets.title;"
	buttons="accept,cancel,extra1,extra2"
	buttonlabelextra1="&hc.sets.apply;"
	buttonlabelextra2="&hc.sets.settings;"
	buttonaccesskeyextra2="&hc.sets.settingsAccesskey;"
	ondialogaccept="return handyClicksSets.saveSettings();"
	ondialogcancel="return handyClicksSets.checkSaved();"
	ondialogextra1="handyClicksSets.saveSettings(true);"
	onchange="handyClicksSets.dataChanged(event);"
	oninput="handyClicksSets.dataChanged(event);"
	oncommand="handyClicksSets.dataChanged(event);"
	oncut="handyClicksSets.dataChanged(event, true);"
	ondragover="handyClicksSets.handleDragOver(event);"
	ondragleave="handyClicksSets.handleDragLeave(event);"
	ondragexit="handyClicksSets.handleDragLeave(event);"
	ondragdrop="handyClicksSets.handleDrop(event);"
	ondrop="handyClicksSets.handleDrop(event);"
	width="&hc.sets.defaultWindowWidth;"
	height="&hc.sets.defaultWindowHeight;"
	persist="width height screenX screenY sizemode">

	<!-- "hc_ondrop" attribute will be replaced in init() function from setsUtils.js -->

	<prefpane id="hc-sets-pane-actions" label="&hc.sets.clickOptionsTitle;" flex="1">
		<hbox id="hc-sets-tree-viewPanel" align="center">
			<button id="hc-sets-tree-searchMenu" type="menu"
				label="&hc.sets.search;" accesskey="&hc.sets.searchAccesskey;"
				hc_key="hc-sets-key-focusSearch">
				<menupopup id="hc-sets-tree-searchPopup"
					onpopupshowing="if(!('_hcIgnore' in event)) handyClicksSets.initSearchMenu(this);"
					onpopupshown="handyClicksSetsUtils.fixAccelWidth(this);"
					oncommand="handyClicksSets.insertSearchPlaceholder(event.target);"
					hc_labelTemplate="&hc.sets.searchCounterTemplate;">
					<menuitem type="checkbox" acceltext="%on%" label="&hc.sets.searchEnabled;" />
					<menuitem type="checkbox" acceltext="%off%" label="&hc.sets.searchDisabled;" />
					<menuseparator />
					<menuitem type="checkbox" acceltext="%open%" label="&hc.sets.searchOpened;" />
					<menuseparator />
					<menuitem type="checkbox" acceltext="%delay%" label="&hc.sets.searchDelayed;" />
					<menuitem type="checkbox" acceltext="%internal%" label="&hc.sets.searchInternal;" />
					<menuitem type="checkbox" acceltext="%custom%" label="&hc.sets.searchCustom;" />
					<menuitem type="checkbox" acceltext="%file%" label="&hc.sets.searchCustomFile;" />
					<menuitem type="checkbox" acceltext="%init%" label="&hc.sets.searchCustomInit;" />
					<menuitem type="checkbox" acceltext="%type%" label="&hc.sets.searchCustomType;" />
					<menuitem type="checkbox" acceltext="%+lng%" label="&hc.sets.searchCustomLocalized;" />
					<menuitem type="checkbox" acceltext="%-lng%" label="&hc.sets.searchCustomNotLocalized;" />
					<menuitem type="checkbox" acceltext="%long%" label="&hc.sets.searchCustomLong;" />
					<menuseparator />
					<menuitem type="checkbox" acceltext="%na%" label="&hc.sets.searchNA;" class="hc-buggy" />
					<menuitem type="checkbox" acceltext="%bug%" label="&hc.sets.searchBuggy;" class="hc-buggy" />
					<menuseparator />
					<menuitem type="checkbox" acceltext="%new%" label="&hc.sets.searchAdded;" />
					<menuitem type="checkbox" acceltext="%ovr%" label="&hc.sets.searchChanged;" />
					<menuitem type="checkbox" acceltext="%old%" label="&hc.sets.searchRemoved;" />
					<menuitem type="checkbox" acceltext="%data%" label="&hc.sets.searchFileData;" />
				</menupopup>
			</button>
			<hbox id="hc-sets-tree-searchContainer" flex="100">
				<textbox id="hc-sets-tree-searchField" type="search" flex="1" persist="hc_value"
					tooltip="hc-sets-search-tooltip"
					onkeypress="handyClicksSets.navigateSearchResults(event);"
					oninput="handyClicksSets.searchInSetsTreeDelay();"
					hc_ondrop="handyClicksSets.searchInSetsTree();"
					oncut="handyClicksSets.searchInSetsTree();" />
				<tooltip id="hc-sets-search-tooltip">
					<description>&hc.sets.searchTip;</description>
				</tooltip>
			</hbox>
			<toolbarbutton id="hc-sets-tree-searchFilterMode" type="checkbox" persist="checked"
				oncommand="handyClicksSets.searchInSetsTreeDelay(true);"
				hc_key="hc-sets-key-toggleFilterMode"
				tooltiptext="&hc.sets.filterTip;" />
			<hbox id="hc-sets-tree-searchStatistics" align="center"
				onclick="handyClicksSets.searcher.navigate(event);"
				hc_tooltipResults="&hc.sets.searchResultsTip;"
				hc_tooltipTotal="&hc.sets.searchTotalTip;">
				<label id="hc-sets-tree-searchResults" />
				<label id="hc-sets-tree-searchDiv" class="hc-mark" value="/" />
				<label id="hc-sets-tree-searchTotal" />
			</hbox>
			<spacer flex="1" />
			<button id="hc-sets-tree-editMenu" type="menu" label="&hc.sets.editMenu;" accesskey="&hc.sets.editMenuAccesskey;">
				<menupopup onpopupshowing="handyClicksSets.initEditMenu(this);">
					<menuitem id="hc-sets-tree-selectAll" key="hc-sets-key-selectAll" label="&hc.sets.selectAll;"
						oncommand="handyClicksSets.selectAll();" />
					<menuitem id="hc-sets-tree-clearSelection" key="hc-sets-key-clearSelection" label="&hc.sets.clearSelection;"
						oncommand="handyClicksSets.clearSelection();" />
					<menuitem id="hc-sets-tree-invertSelection" key="hc-sets-key-invertSelection" label="&hc.sets.invertSelection;"
						oncommand="handyClicksSets.invertSelection();" />
					<menuseparator />
					<menuitem id="hc-sets-tree-focus" key="hc-sets-key-focusSetsTree" label="&hc.sets.focusTree;"
						oncommand="handyClicksSets.focusSetsTree();" />
					<menuseparator />
					<menuitem id="hc-sets-tree-collapse" key="hc-sets-key-collapseTree" label="&hc.sets.collapseTree;"
						oncommand="handyClicksSets.toggleTreeContainers(false);" />
					<menuitem id="hc-sets-tree-collapseLevel" key="hc-sets-key-collapseTreeLevel" label="&hc.sets.collapseTreeLevel;"
						oncommand="handyClicksSets.changeTreeExpandLevel(-1);" />
					<menuitem id="hc-sets-tree-expandLevel" key="hc-sets-key-expandTreeLevel" label="&hc.sets.expandTreeLevel;"
						oncommand="handyClicksSets.changeTreeExpandLevel(1);" />
					<menuitem id="hc-sets-tree-expand" key="hc-sets-key-expandTree" label="&hc.sets.expandTree;"
						oncommand="handyClicksSets.toggleTreeContainers(true);" />
					<menuseparator />
					<menuitem id="hc-sets-tree-find" key="hc-sets-key-focusSearch" label="&hc.sets.find;"
						oncommand="handyClicksSets.focusSearch();" />
					<menuitem id="hc-sets-tree-findNext" key="hc-sets-key-findNext" label="&hc.sets.findNext;"
					oncommand="handyClicksSets.searcher.next(true);" />
					<menuitem id="hc-sets-tree-findPrev" key="hc-sets-key-findPrev" label="&hc.sets.findPrev;"
						oncommand="handyClicksSets.searcher.prev(true);" />
					<menuitem id="hc-sets-tree-findSelectAll" key="hc-sets-key-findSelectAll" label="&hc.sets.findSelectAll;"
						oncommand="handyClicksSets.searcher.selectAll(true);" />
					<menuseparator />
					<menuitem id="hc-sets-tree-findFilter" type="checkbox" key="hc-sets-key-toggleFilterMode" label="&hc.sets.findFilter;"
						oncommand="handyClicksSets.toggleFilterMode();" />
				</menupopup>
			</button>
			<button id="hc-sets-tree-viewMenu" type="menu" label="&hc.sets.viewMenu;" accesskey="&hc.sets.viewMenuAccesskey;">
				<menupopup id="hc-sets-tree-viewPopup"
					onpopupshowing="handyClicksSets.initViewMenu(this);"
					oncommand="event.stopPropagation(); handyClicksSets.viewMenuCommand(event, this);"
					onclick="handyClicksSets.viewMenuClick(event, this);">
					<menuitem type="radio" hc_drawMode="0" key="hc-sets-key-treeDrawMode-normal"         label="&hc.sets.drawModeNormal;" />
					<menuitem type="radio" hc_drawMode="1" key="hc-sets-key-treeDrawMode-normalCompact"  label="&hc.sets.drawModeNormalCompact;" />
					<menuitem type="radio" hc_drawMode="2" key="hc-sets-key-treeDrawMode-normalInline"   label="&hc.sets.drawModeNormalInline;" />
					<menuitem type="radio" hc_drawMode="3" key="hc-sets-key-treeDrawMode-inverse"        label="&hc.sets.drawModeInverse;" />
					<menuitem type="radio" hc_drawMode="4" key="hc-sets-key-treeDrawMode-inverseCompact" label="&hc.sets.drawModeInverseCompact;" />
					<menuitem type="radio" hc_drawMode="5" key="hc-sets-key-treeDrawMode-inverseInline"  label="&hc.sets.drawModeInverseInline;" />
					<menuseparator />
					<menu id="hc-sets-tree-sortMenu" label="&hc.sets.sortBy;">
						<menupopup onpopupshowing="handyClicksSets.initSortMenu(this);"
							oncommand="handyClicksSets.sortMenuCommand(event);">
							<menuseparator />
							<menuitem type="checkbox" hc_pref="sets.treeSortAutoInlineDrawMode" label="&hc.sets.sortAutoInline;" />
						</menupopup>
					</menu>
					<menu label="&hc.sets.remember;">
						<menupopup>
							<menuitem type="checkbox" hc_pref="sets.rememberSearchQuery" label="&hc.sets.rememberSearchQuery;" />
							<menuitem type="checkbox" hc_pref="sets.rememberScrollPosition" label="&hc.sets.rememberScrollPosition;" />
							<menuitem type="checkbox" hc_pref="sets.rememberState" label="&hc.sets.rememberState;" />
							<menuitem type="checkbox" hc_pref="sets.rememberSort" label="&hc.sets.rememberSort;" />
						</menupopup>
					</menu>
					<menu id="hc-sets-tree-customTypesMenu" label="&hc.sets.customTypes;">
						<menupopup>
							<menuitem type="radio" hc_sortTypes="-1" label="&hc.sets.customTypesBefore;" />
							<menuitem type="radio" hc_sortTypes="0" label="&hc.sets.customTypesBetween;" />
							<menuitem type="radio" hc_sortTypes="1" label="&hc.sets.customTypesAfter;" />
						</menupopup>
					</menu>
					<menuseparator />
					<menuitem type="checkbox" hc_pref="sets.treeExpandDelayedAction" label="&hc.sets.expandDa;" />
					<menuitem type="checkbox" hc_treeAttr="hc_colored" label="&hc.sets.colorizeTree;" />
					<menuitem type="checkbox" hc_treeAttr="hc_grid" label="&hc.sets.showTreeGrid;" />
					<menuitem type="checkbox" hc_pref="sets.localizeArguments" label="&hc.sets.localizeArgs;" />
					<menuseparator />
					<menuitem type="checkbox" hc_pref="sets.closeTreeViewMenu" label="&hc.sets.closeThisMenu;"
						closemenu="none"
						oncommand="handyClicksSets.setViewMenuClose(event, this);"
						onclick="if(event.button == 1) handyClicksSets.setViewMenuClose(event, this);" />
				</menupopup>
			</button>
		</hbox>
		<tree id="hc-sets-tree" flex="1" enableColumnDrag="true" treelines="true" context="hc-sets-tree-context"
			hc_colored="true" hc_hasOverlayBackground="false"
			persist="hc_colored hc_grid"
			onselect="handyClicksSets.updTreeButtons();">
			<treecols id="hc-sets-tree-columns">
				<treecol id="hc-sets-tree-columnShortcutAndTarget" sort="hc_sortData0" flex="1" primary="true" label="&hc.sets.columnShortcutAndTarget;" persist="width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnEvent" sort="hc_sortData1" flex="1" label="&hc.sets.columnEvent;" persist="hidden width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnAction" sort="hc_sortData2" flex="1" label="&hc.sets.columnAction;" persist="hidden width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnFunction" sort="hc_sortData3" flex="1" label="&hc.sets.columnFunction;" persist="hidden width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnArguments" sort="hc_sortData4" flex="1" label="&hc.sets.columnArguments;" persist="hidden width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnInit" sort="hc_sortData5" flex="1" label="&hc.sets.columnInit;" hidden="true" persist="hidden width ordinal" />
				<splitter class="tree-splitter" />
				<treecol id="hc-sets-tree-columnEnabled" sort="hc_sortData6" type="checkbox" width="18" minwidth="18" label="&hc.sets.columnEnabled;" persist="hidden width ordinal" />
			</treecols>
			<treechildren id="hc-sets-tree-content"
				onclick="handyClicksSets.treeClick(event);"
				ondblclick="handyClicksSets.editItems(event);"
				onmousedown="handyClicksSets.smartSelect(event); handyClicksSets.treeClick(event);"
				onmousemove="handyClicksSets.highlightHover(event); handyClicksSets.smartSelect(event);"
				onmouseout="handyClicksSets.unhoverCheckbox();" />
		</tree>
		<vbox id="hc-sets-tree-buttons">
			<hbox id="hc-sets-tree-importPanel" pack="center" align="end" hidden="true">
				<hbox id="hc-sets-tree-importFilesDataBox" align="center"
					tooltip="_child">
					<checkbox id="hc-sets-tree-importFilesData"
						oncommand="handyClicksSets.toggleImportFilesData(this.checked);"
						hc_label="&hc.sets.importFilesData;"
						hc_labelN="&hc.sets.importFilesDataN;"
						accesskey="&hc.sets.importFilesDataAccesskey;" />
					<label id="hc-sets-tree-importFilesStatistics"
						onclick="if(event.button == 0) handyClicksSets.toggleSearch('%data%');" />
					<tooltip id="hc-sets-tree-importFilesTip" noautohide="true">
						<label value="&hc.sets.importFilesDataTip;" />
						<separator class="groove hc-filesData" />
						<hbox class="hc-filesData" align="center">
							<label class="hc-new" value="&hc.sets.importAdded;" />
							<label class="hc-mark hc-statsValue" id="hc-sets-tree-importFilesTipAdded" value="?" />

							<label class="hc-override hc-markStart" value="&hc.sets.importChanged;" />

							<label class="hc-mark hc-older hc-statsValue" id="hc-sets-tree-importFilesTipOlder" value="?" />
							<label class="hc-mark" value="/" />
							<label class="hc-mark hc-statsValue" id="hc-sets-tree-importFilesTipSameDate" value="?" />
							<label class="hc-mark" value="/" />
							<label class="hc-mark hc-newer hc-statsValue" id="hc-sets-tree-importFilesTipNewer" value="?" />

							<label class="hc-mark hc-markStart" value="(" />
							<label class="hc-mark hc-override hc-older" value="&hc.sets.importOlder;" />
							<label class="hc-mark" value="/" />
							<label class="hc-mark hc-override" value="&hc.sets.importSameDate;" />
							<label class="hc-mark" value="/" />
							<label class="hc-mark hc-override hc-newer" value="&hc.sets.importNewer;" />
							<label class="hc-mark" value=")" />
						</hbox>
						<grid class="hc-filesData">
							<columns>
								<column />
								<column id="hc-sets-tree-importFilesTipPath" />
								<column />
								<column />
							</columns>
							<rows id="hc-sets-tree-importFilesTipRows" />
						</grid>
					</tooltip>
				</hbox>
				<radiogroup id="hc-sets-tree-importType"
					oncommand="handyClicksSets.toggleImportType(this.value == 'true');">
					<radio id="hc-sets-tree-importPartial" value="true"
						label="&hc.sets.importIncrement;" accesskey="&hc.sets.importIncrementAccesskey;" />
					<radio id="hc-sets-tree-importFull" value="false"
						label="&hc.sets.importReplace;" accesskey="&hc.sets.importReplaceAccesskey;" />
				</radiogroup>
				<grid id="hc-sets-tree-importStatistics" tooltiptext="&hc.sets.importTip;">
					<columns>
						<column />
						<column />
						<column id="hc-sets-tree-importStatistics-sep-delayed" />
						<column />
						<column id="hc-sets-tree-importStatistics-sep-types" />
						<column />
					</columns>
					<rows>
						<row onclick="if(event.button == 0) handyClicksSets.toggleSearch('%new%');">
							<label id="hc-sets-tree-importAdded" value="&hc.sets.importAdded;" />
							<label id="hc-sets-tree-importAddedNormal" class="hc-statsValue" value="?" />
							<label value="/" />
							<label id="hc-sets-tree-importAddedDelayed" class="hc-statsValue" value="?" />
							<label value="+" />
							<label id="hc-sets-tree-importAddedCustomTypes" class="hc-statsValue" value="?" />
						</row>
						<row onclick="if(event.button == 0) handyClicksSets.toggleSearch('%ovr%');">
							<label id="hc-sets-tree-importChanged" value="&hc.sets.importChanged;" />
							<label id="hc-sets-tree-importChangedNormal" class="hc-statsValue" value="?" />
							<label value="/" />
							<label id="hc-sets-tree-importChangedDelayed" class="hc-statsValue" value="?" />
							<label value="+" />
							<label id="hc-sets-tree-importChangedCustomTypes" class="hc-statsValue" value="?" />
						</row>
						<row id="hc-sets-tree-importRowRemoved"
							onclick="if(event.button == 0) handyClicksSets.toggleSearch('%old%');">
							<label id="hc-sets-tree-importRemoved" value="&hc.sets.importRemoved;" />
							<label id="hc-sets-tree-importRemovedNormal" class="hc-statsValue" value="?" />
							<label value="/" />
							<label id="hc-sets-tree-importRemovedDelayed" class="hc-statsValue" value="?" />
							<label value="+" />
							<label id="hc-sets-tree-importRemovedCustomTypes" class="hc-statsValue" value="?" />
						</row>
					</rows>
				</grid>
				<button id="hc-sets-tree-buttonImportOk" class="hc-iconic"
					oncommand="handyClicksSets.importDone(true);"
					label="&hc.sets.importOk;" accesskey="&hc.sets.importOkAccesskey;" />
				<button id="hc-sets-tree-buttonImportCancel" class="hc-iconic"
					oncommand="handyClicksSets.importDone(false);"
					label="&hc.sets.importCancel;" accesskey="&hc.sets.importCancelAccesskey;" />
			</hbox>
			<hbox id="hc-sets-tree-editPanel" pack="center">
				<button id="hc-sets-tree-buttonAdd" hc_key="hc-sets-key-add" class="hc-iconic" label="&hc.sets.cmdAdd;"
					onclick="handyClicksSets.addItems(event);"
					oncommand="handyClicksSets.addItems(event);" />
				<button id="hc-sets-tree-buttonEdit" hc_key="hc-sets-key-edit" class="hc-iconic"
					command="hc-sets-cmd-edit"
					onclick="handyClicksSets.editButtonClick(event);" />
				<button id="hc-sets-tree-buttonDelete" hc_key="hc-sets-key-delete" class="hc-iconic" command="hc-sets-cmd-delete" />
				<spacer id="hc-sets-tree-buttonsSpacer" class="hcHSpacer" />
				<button id="hc-sets-tree-buttonExport" class="hc-iconic" type="menu" label="&hc.sets.export;" accesskey="&hc.sets.exportAccesskey;">
					<menupopup position="before_start">
						<menuitem command="hc-sets-cmd-fullExportToFile" key="hc-sets-key-fullExportToFile" />
						<menuseparator />
						<menuitem oncommand="handyClicksSets.createBackup();" key="hc-sets-key-createBackup" label="&hc.sets.createBackup;" />
						<menuseparator />
						<menuitem command="hc-sets-cmd-partialExportToFile" key="hc-sets-key-partialExportToFile" />
						<menuitem command="hc-sets-cmd-partialExportToClipboard" key="hc-sets-key-partialExportToClipboard" />
						<menuitem command="hc-sets-cmd-exportToHTML" key="hc-sets-key-exportToHTML" />
						<menuitem command="hc-sets-cmd-exportToURI" key="hc-sets-key-exportToURI" />
					</menupopup>
				</button>
				<button id="hc-sets-tree-buttonImport" class="hc-iconic" type="menu" label="&hc.sets.import;" accesskey="&hc.sets.importAccesskey;">
					<menupopup id="hc-sets-tree-buttonImportPopup" position="before_start"
						onpopupshowing="if(event.target == this) handyClicksSets.initImportPopup();">
						<menu id="hc-sets-tree-restoreFromBackupMenu" label="&hc.sets.restoreFromBackup;"
							oncommand="event.stopPropagation();">
							<menupopup id="hc-sets-tree-restoreFromBackupPopup"
								context="hc-sets-tree-restoreFromBackupContext"
								oncommand="handyClicksSets.handleRestoreCommand(event);"
								onclick="if(event.button == 1) { handyClicksSets.handleRestoreCommand(event); handyClicksUtils.closeMenus(this); }">
								<menuseparator />
								<menuitem id="hc-sets-tree-openBackupsDir" class="menuitem-iconic hc-iconic"
									oncommand="handyClicksSets.ut.reveal(handyClicksPrefSvc.backupsDir);"
									label="&hc.sets.openBackupDir;" accesskey="&hc.sets.openBackupDirAccesskey;" />
								<menuseparator />
								<menuitem id="hc-sets-tree-removeDuplicateBackups" class="menuitem-iconic hc-iconic"
									oncommand="handyClicksSets.removeDuplicateBackups();" closemenu="none"
									label="&hc.sets.removeDuplicateBackups;" accesskey="&hc.sets.removeDuplicateBackupsAccesskey;" />
								<menuseparator />
								<menuitem id="hc-sets-tree-removeUserBackups2" class="menuitem-iconic hc-iconic"
									oncommand="handyClicksSets.removeOldUserBackups(handyClicksSets.pu.get('sets.backupUserRemoveDepth2'));" closemenu="none"
									hc_label="&hc.sets.removeUserBackups;" accesskey="&hc.sets.removeUserBackups2Accesskey;" />
								<menuitem id="hc-sets-tree-removeUserBackups" class="menuitem-iconic hc-iconic"
									oncommand="handyClicksSets.removeOldUserBackups(handyClicksSets.pu.get('sets.backupUserRemoveDepth'));" closemenu="none"
									hc_label="&hc.sets.removeUserBackups;" accesskey="&hc.sets.removeUserBackupsAccesskey;" />
							</menupopup>
						</menu>
						<menuseparator />
						<menuitem command="hc-sets-cmd-importFromFile" key="hc-sets-key-importFromFile" />
						<menuitem command="hc-sets-cmd-importFromClipboard" key="hc-sets-key-importFromClipboard" />
					</menupopup>
				</button>
			</hbox>
		</vbox>
	</prefpane>

	<prefpane id="hc-sets-pane-prefs" label="&hc.sets.clickPrefsTitle;" flex="1">
		<preferences>
			<preference id="enabled" type="bool" name="extensions.handyclicks.enabled" />
			<preference id="delayedActionTimeout" type="int" name="extensions.handyclicks.delayedActionTimeout" />
			<preference id="notifyOpenTime" type="int" name="extensions.handyclicks.notify.openTime" />
			<preference id="notifyOpenTimeWarnings" type="int" name="extensions.handyclicks.notify.openTimeWarnings" />
			<preference id="notifyInWindowCorner" type="bool" name="extensions.handyclicks.notify.inWindowCorner" />
			<preference id="notifyDontOpenTwice" type="bool" name="extensions.handyclicks.notify.dontOpenTwice" />
			<preference id="notifyDontCloseUnderCursor" type="bool" name="extensions.handyclicks.notify.dontCloseUnderCursor" />
			<preference id="disallowMousemoveDist" type="int" name="extensions.handyclicks.disallowMousemoveDist" />
		</preferences>

		<checkbox preference="enabled" id="hc-sets-enabled" label="&hc.sets.enabled;" hc_important="enabled" />
		<hbox align="center">
			<label value="&hc.sets.delayedActionTimeout;" control="hc-sets-delayedActionTimeout" />
			<textbox id="hc-sets-delayedActionTimeout" preference="delayedActionTimeout"
				type="number" min="0" max="10000" increment="10" size="5" />
			<label value="&hc.sets.zeroForDisable;" />
		</hbox>
		<groupbox>
			<caption label="&hc.sets.notify;" />
			<grid>
				<columns>
					<column />
					<column />
					<column />
				</columns>
				<rows>
					<row align="center">
						<label value="&hc.sets.notifyCloseAfter;" control="hc-sets-notifyOpenTime" />
						<textbox id="hc-sets-notifyOpenTime" preference="notifyOpenTime"
							type="number" min="0" max="1200000" increment="50" size="7"
							hc_requiredFor="notify notifyMessages" hc_disablePattern="0" />
						<label value="&hc.sets.zeroForDisable;" />
					</row>
					<row align="center">
						<label value="&hc.sets.notifyCloseWarningsAfter;" control="hc-sets-notifyOpenTimeWarnings" />
						<textbox id="hc-sets-notifyOpenTimeWarnings" preference="notifyOpenTimeWarnings"
							type="number" min="0" max="1200000" increment="50" size="7"
							hc_requiredFor="notify" hc_disablePattern="0" />
						<label value="&hc.sets.zeroForDisable;" />
					</row>
				</rows>
			</grid>
			<checkbox preference="notifyInWindowCorner" hc_dependsOn="notify" label="&hc.sets.notifyInWindowCorner;" />
			<checkbox preference="notifyDontCloseUnderCursor" hc_dependsOn="notify" label="&hc.sets.notifyDontClose;" />
			<checkbox preference="notifyDontOpenTwice" hc_dependsOn="notify" label="&hc.sets.notifyDontOpenTwice;" />
		</groupbox>
		<groupbox>
			<caption label="&hc.sets.disallowMousemoveCaption;" />
			<label value="&hc.sets.disallowMousemove;" />
			<hbox>
				<checkbox id="hc-sets-disallowMousemove-0" label="&hc.sets.left;" hc_requiredFor="disallowMousemove" />
				<checkbox id="hc-sets-disallowMousemove-1" label="&hc.sets.middle;" hc_requiredFor="disallowMousemove" />
				<checkbox id="hc-sets-disallowMousemove-2" label="&hc.sets.right;" hc_requiredFor="disallowMousemove" />
			</hbox>
			<hbox align="center" hc_dependsOn="disallowMousemove">
				<label value="&hc.sets.maxDistance;" control="hc-sets-disallowMousemoveDist" />
				<textbox id="hc-sets-disallowMousemoveDist" preference="disallowMousemoveDist"
					type="number" min="0" max="200" increment="2" size="3" />
				<label value="&hc.sets.px;" />
			</hbox>
		</groupbox>
	</prefpane>

	<prefpane id="hc-sets-pane-organize" label="&hc.sets.organizeTitle;" flex="1">
		<preferences>
			<preference id="showInToolsMenu" type="bool" name="extensions.handyclicks.ui.showInToolsMenu" />
			<preference id="showInAppMenu" type="bool" name="extensions.handyclicks.ui.showInAppMenu" />
			<preference id="showInStatusbar" type="bool" name="extensions.handyclicks.ui.showInStatusbar" />
			<preference id="showMouseButton" type="bool" name="extensions.handyclicks.ui.showMouseButton" />
			<preference id="customizableProgressBar" type="bool" name="extensions.handyclicks.ui.customizableProgressBar" />

			<preference id="action-0-0" type="int" name="extensions.handyclicks.ui.actionMenuLeftClick" />
			<preference id="action-0-1" type="int" name="extensions.handyclicks.ui.actionMenuMiddleClick" />
			<preference id="action-0-2" type="int" name="extensions.handyclicks.ui.actionMenuRightClick" />
			<preference id="action-1-0" type="int" name="extensions.handyclicks.ui.actionStatusbarLeftClick" />
			<preference id="action-1-1" type="int" name="extensions.handyclicks.ui.actionStatusbarMiddleClick" />
			<preference id="action-1-2" type="int" name="extensions.handyclicks.ui.actionStatusbarRightClick" />
			<preference id="action-2-0" type="int" name="extensions.handyclicks.ui.actionToolbarLeftClick" />
			<preference id="action-2-1" type="int" name="extensions.handyclicks.ui.actionToolbarMiddleClick" />
			<preference id="action-2-2" type="int" name="extensions.handyclicks.ui.actionToolbarRightClick" />
		</preferences>

		<groupbox>
			<caption label="&hc.sets.appearance;" />
			<checkbox preference="showInToolsMenu" label="&hc.sets.showInToolsMenu;" />
			<checkbox preference="showInAppMenu" label="&hc.sets.showInAppMenu;" />
			<checkbox preference="showInStatusbar" label="&hc.sets.showInStatusbar;" />
			<checkbox preference="showMouseButton" label="&hc.sets.showMouseButton;" />
			<checkbox preference="customizableProgressBar" label="&hc.sets.customizableProgressBar;" />
		</groupbox>
		<groupbox align="center" orient="horizontal">
			<caption label="&hc.sets.actions;" />
			<radiogroup id="hc-sets-action-type" onselect="handyClicksSets.loadUIAction();">
				<radio value="Menu" label="&hc.sets.actionTypeMenu;" selected="true" />
				<radio value="Statusbar" label="&hc.sets.actionTypeStatusbar;" />
				<radio value="Toolbar" label="&hc.sets.actionTypeToolbar;" />
			</radiogroup>
			<spacer class="hcHSpacerSmall" />
			<radiogroup id="hc-sets-action-button" onselect="handyClicksSets.loadUIAction();">
				<radio value="Left" label="&hc.sets.actionButtonLeft;" selected="true" />
				<radio value="Middle" label="&hc.sets.actionButtonMiddle;" tooltiptext="&hc.sets.actionButtonMiddleTip;" />
				<radio value="Right" label="&hc.sets.actionButtonRight;" tooltiptext="&hc.sets.actionButtonRightTip;" />
			</radiogroup>
			<spacer class="hcHSpacerSmall" />
			<vbox>
				<menulist id="hc-sets-action-value" oncommand="handyClicksSets.changeUIAction();">
					<menupopup>
						<menuitem value="0" label="&hc.sets.actionToggleStatus;" />
						<menuitem value="1" label="&hc.sets.actionOpenSettings;" />
						<menuitem value="5" label="&hc.sets.actionOpenCloseSettings;" />
						<menuitem value="4" label="&hc.sets.actionOpenAllSettings;" />
						<menuitem value="2" label="&hc.sets.actionContext;" />
						<menuitem value="3" label="&hc.sets.actionEditMode;" />
						<menuitem value="6" label="&hc.sets.actionOpenEditor;" />
						<menuitem value="7" label="&hc.sets.actionOpenEditorTypes;" />
						<menuseparator />
						<menuitem value="-1" label="&hc.sets.actionDoNothing;" />
					</menupopup>
				</menulist>
				<hbox pack="center">
					<button id="hc-sets-action-reset" label="&hc.sets.actionReset;"
						oncommand="handyClicksSets.resetUIAction();" />
					<button id="hc-sets-action-resetAll" label="&hc.sets.actionResetAll;"
						oncommand="handyClicksSets.resetAllUIActions();" />
				</hbox>
			</vbox>
			<vbox hidden="true">
				<textbox preference="action-0-0" />
				<textbox preference="action-0-1" />
				<textbox preference="action-0-2" />
				<textbox preference="action-1-0" />
				<textbox preference="action-1-1" />
				<textbox preference="action-1-2" />
				<textbox preference="action-2-0" />
				<textbox preference="action-2-1" />
				<textbox preference="action-2-2" />
			</vbox>
		</groupbox>
	</prefpane>

	<prefpane id="hc-sets-pane-editor" label="&hc.sets.editorTitle;" flex="1">
		<preferences>
			<preference id="onTopButton" type="bool" name="extensions.handyclicks.ui.onTopButton" />
			<preference id="overrideInstantApply" type="int" name="extensions.handyclicks.sets.overrideInstantApply" />
			<preference id="tabSize" type="int" name="extensions.handyclicks.editor.tabSize" />
			<preference id="tabSpaces" type="bool" name="extensions.handyclicks.editor.tabSpaces" />
			<preference id="autocomplete" type="bool" name="extensions.handyclicks.editor.autocomplete" />
			<preference id="autocompleteMinSymbols" type="int" name="extensions.handyclicks.editor.autocompleteMinSymbols" />
			<preference id="externalEditorPath" type="string" name="extensions.handyclicks.editor.external.path" />
			<preference id="externalEditorArgs" type="string" name="extensions.handyclicks.editor.external.args" />
			<preference id="labelInFileName" type="bool" name="extensions.handyclicks.editor.external.labelInFileName" />
			<preference id="externalEditorExt" type="string" name="extensions.handyclicks.editor.external.extension" />
		</preferences>

		<groupbox>
			<caption label="&hc.sets.settingsInterface;" />
			<checkbox preference="onTopButton" label="&hc.sets.onTopButton;" />
			<hbox id="hc-sets-overrideInstantApply-box" align="center">
				<label value="&hc.sets.overrideInstantApply;" />
				<menulist preference="overrideInstantApply">
					<menupopup>
						<menuitem value="-1" label="&hc.sets.overrideInstantApply.useBrowserSettings;"
							tooltiptext="&hc.sets.overrideInstantApply.useBrowserSettingsTip;" />
						<menuitem value="0" label="&hc.sets.overrideInstantApply.forceOff;" />
						<menuitem value="1" label="&hc.sets.overrideInstantApply.forceOn;" />
					</menupopup>
				</menulist>
				<button label="&hc.sets.reopenWindow;" oncommand='
					var pref = document.getElementById("overrideInstantApply");
					var notSaved = pref.valueFromPreferences != pref.value;
					if(notSaved)
						pref.valueFromPreferences = pref.value;
					if(!document.documentElement.cancelDialog())
						return;
					var args = "chrome,all,resizable,dialog=0"
						+ ",left=" + window.screenX + ",top=" + window.screenY;
					window.openDialog(location.href, "", args)
						.focus();
					if(notSaved)
						handyClicksPrefUtils.savePrefFile();' />
			</hbox>
			<hbox align="center">
				<label value="&hc.sets.warnMsgs;" />
				<button id="hc-sets-warnMsgs" type="menu" label="&hc.sets.warnMsgsSelect;"
					onclick="if(event.button == 2) handyClicksSets.showWarnMsgsPrefs(event.target);">
					<menupopup id="hc-sets-warnMsgs-popup"
						onpopupshowing="handyClicksSets.initResetWarnMsgsMenu();"
						oncommand="handyClicksSets.resetWarnMsg(event.target);"
						hc_restoreAll="&hc.sets.warnMsgsRestoreAll;" />
				</button>
			</hbox>
		</groupbox>
		<groupbox orient="horizontal">
			<caption label="&hc.sets.internalEditor;" />
			<groupbox orient="horizontal" align="center">
				<caption label="&hc.sets.tabulation;" />
				<label value="&hc.sets.tabSize;" control="hc-sets-tabSize" />
				<textbox id="hc-sets-tabSize" preference="tabSize" type="number" min="1" max="300" increment="1" size="2" />
				<checkbox preference="tabSpaces" label="&hc.sets.tabSpaces;" />
			</groupbox>
			<groupbox orient="horizontal" align="center">
				<caption label="&hc.sets.autocomplete;" />
				<checkbox preference="autocomplete" hc_requiredFor="autocomplete" label="&hc.sets.autocompleteShowAfter;" />
				<textbox id="hc-sets-tabSize" hc_dependsOn="autocomplete"
					preference="autocompleteMinSymbols" type="number" min="1" max="10" increment="1" size="2"
					onchange="handyClicksSets.setAutocompletePlural(this);"
					onsyncfrompreference="handyClicksSets.setAutocompletePlural(this);" />
				<label hc_dependsOn="autocomplete" value="&hc.sets.autocompleteMinSymbols;"
					hc_labelSingle="&hc.sets.autocompleteMinSymbol;" hc_labelMultiple="&hc.sets.autocompleteMinSymbols;" />
			</groupbox>
		</groupbox>
		<groupbox>
			<caption label="&hc.sets.externalEditor;" />
			<hbox align="center">
				<label class="hc-tip" value="&hc.sets.externalEditorPath;" tooltip="hc-sets-externalEditorPath-tooltip" control="hc-sets-externalEditorPath" />
				<tooltip id="hc-sets-externalEditorPath-tooltip">
					<description>&hc.sets.externalEditorPathNote;</description>
				</tooltip>
				<image id="hc-sets-externalEditorIcon" onclick="handyClicksSets.externalEditorEvent(event);" />
				<textbox id="hc-sets-externalEditorPath" preference="externalEditorPath" flex="1"
					onkeypress="handyClicksSets.externalEditorEvent(event);"
					oninput="handyClicksSets.externalEditorChanged(true);"
					onchange="handyClicksSets.externalEditorChanged();"
					hc_ondrop="handyClicksSets.externalEditorChanged();"
					oncut="handyClicksSets.externalEditorChanged(true);"
					hc_requiredFor="externalEditor" hc_enablePattern="[/\\]\S|^%[^%]+%." />
				<button icon="open" oncommand="handyClicksSets.selectExternalEditor();" label="&hc.sets.externalEditorBrowse;" />
				<deck id="hc-sets-externalEditorButtonDeck" oncommand="handyClicksSets.convertPath();">
					<button id="hc-sets-externalEditorButtonRelative"
						label="&hc.sets.externalEditorMakeRelative;"
						hc_dependsOn="externalEditor" />
					<button id="hc-sets-externalEditorButtonAbsolute"
						label="&hc.sets.externalEditorMakeAbsolute;"
						hc_dependsOn="externalEditor" />
				</deck>
			</hbox>
			<grid>
				<columns>
					<column hc_dependsOn="externalEditor">
						<vbox> <!-- Trick to prevent vertical flexibility -->
							<label class="hc-tip" value="&hc.sets.externalEditorArgs;"
								tooltip="hc-sets-externalEditorArgs-tooltip"
								control="hc-sets-externalEditorArgs" />
							<tooltip id="hc-sets-externalEditorArgs-tooltip">
								<description>&hc.sets.externalEditorArgsTip;</description>
							</tooltip>
						</vbox>
					</column>
					<column flex="1" hc_dependsOn="externalEditor">
						<textbox id="hc-sets-externalEditorArgs" preference="externalEditorArgs" multiline="true" rows="3" wrap="off"
							style="margin-bottom: 3px;" />
					</column>
					<column>
						<groupbox id="hc-sets-externalEditorTempFile-box" style="margin-bottom: 3px;">
							<caption label="&hc.sets.externalEditorTempFile;" />
							<checkbox preference="labelInFileName" label="&hc.sets.externalEditorTempFileName;"
								style="position: relative;" />
							<hbox id="hc-sets-externalEditorTempFileExt-box" align="center">
								<label value="&hc.sets.externalEditorTempFileExt;" control="hc-sets-externalEditorExt" />
								<textbox id="hc-sets-externalEditorExt" preference="externalEditorExt" size="8" />
							</hbox>
						</groupbox>
					</column>
				</columns>
				<rows>
					<row />
				</rows>
			</grid>
		</groupbox>
	</prefpane>

	<prefpane id="hc-sets-pane-funcs" label="&hc.sets.builtInFuncsTitle;" flex="1">
		<preferences>
			<preference id="loadJavaScriptLinks" type="bool" name="extensions.handyclicks.funcs.loadJavaScriptLinks" />
			<preference id="notifyJavaScriptLinks" type="bool" name="extensions.handyclicks.funcs.notifyJavaScriptLinks" />
			<preference id="loadVoidLinksWithHandlers" type="bool" name="extensions.handyclicks.funcs.loadVoidLinksWithHandlers" />
			<preference id="notifyVoidLinksWithHandlers" type="bool" name="extensions.handyclicks.funcs.notifyVoidLinksWithHandlers" />
			<preference id="filesLinksPolicy" type="int" name="extensions.handyclicks.funcs.filesLinksPolicy" />
			<preference id="filesLinksMask" type="string" name="extensions.handyclicks.funcs.filesLinksMask" />
			<preference id="convertURIs" type="bool" name="extensions.handyclicks.funcs.convertURIs" />
			<preference id="convertURIsCharset" type="string" name="extensions.handyclicks.funcs.convertURIsCharset" />
			<preference id="openOnlyVisibleLinks" type="bool" name="extensions.handyclicks.funcs.openOnlyVisibleLinks" />
			<preference id="multipleTabsOpenDelay" type="int" name="extensions.handyclicks.funcs.multipleTabsOpenDelay" />
		</preferences>

		<groupbox orient="horizontal">
			<caption label="&hc.sets.jsLinks;" />
			<checkbox preference="loadJavaScriptLinks" label="&hc.sets.linkLoad;" />
			<checkbox preference="notifyJavaScriptLinks" hc_dependsOn="notifyMessages" label="&hc.sets.linkNotify;" />
		</groupbox>
		<groupbox orient="horizontal">
			<caption label="&hc.sets.voidLinks;" />
			<checkbox preference="loadVoidLinksWithHandlers" label="&hc.sets.linkLoad;" />
			<checkbox preference="notifyVoidLinksWithHandlers" hc_dependsOn="notifyMessages" label="&hc.sets.linkNotify;" />
		</groupbox>
		<groupbox>
			<caption label="&hc.sets.fileLinks;" />
			<hbox align="center">
				<menulist preference="filesLinksPolicy" hc_requiredFor="regexp" hc_disablePattern="-1">
					<menupopup>
						<menuitem value="-1" label="&hc.sets.fileLinksNotCheck;" />
						<menuitem value="0" label="&hc.sets.fileLinksShowContext;" />
						<menuitem value="1" label="&hc.sets.fileLinksOpen;" />
					</menupopup>
				</menulist>
			</hbox>
			<hbox align="center" hc_dependsOn="regexp">
				<label class="hc-tip" control="hc-sets-filesLinksMask"
					value="&hc.sets.fileLinksFilter;" tooltiptext="&hc.sets.fileLinksFilterTip;" />
				<textbox id="hc-sets-filesLinksMask" preference="filesLinksMask" flex="1" />
			</hbox>
		</groupbox>
		<groupbox orient="horizontal">
			<caption label="&hc.sets.openURIsInApps;" />
			<checkbox preference="convertURIs" hc_requiredFor="convert" label="&hc.sets.convertURIs;" />
			<menulist id="hc-sets-convertURIsCharset" hc_dependsOn="convert"
				ref="NC:DecodersRoot" datasources="rdf:charset-menu"
				preference="convertURIsCharset"
				onsyncfrompreference='
					handyClicksSets.buildCharsetMenu(this.firstChild);
					this.setAttribute("onsyncfrompreference", "");'>
				<menupopup>
					<menuitem label="&hc.sets.autodetect;" value="" />
					<menuseparator />
				</menupopup>
				<template>
					<menupopup>
						<menuitem label="rdf:http://home.netscape.com/NC-rdf#Name" value="..." uri="..." />
					</menupopup>
				</template>
			</menulist>
		</groupbox>
		<groupbox>
			<caption label="&hc.sets.similarLinks;" />
			<checkbox preference="openOnlyVisibleLinks" label="&hc.sets.visibleOnly;" />
			<hbox align="center">
				<label value="&hc.sets.openingDelay;" control="hc-sets-multipleTabsOpenDelay" />
				<textbox id="hc-sets-multipleTabsOpenDelay" preference="multipleTabsOpenDelay"
					type="number" min="0" max="60000" increment="10" size="5" />
				<label value="&hc.sets.ms;" />
			</hbox>
		</groupbox>
	</prefpane>

	<!--
		https://developer.mozilla.org/En/Preferences_System/Prefwindow#Issues_when_using_prefpanes_in_prefwindow
		https://bugzilla.mozilla.org/show_bug.cgi?id=296418
	-->
	<script type="application/javascript">
	<![CDATA[
		if(window instanceof Components.interfaces.nsIDOMChromeWindow) {
			// Hack for persist="sizemode"
			var _sizeToContent = sizeToContent;
			sizeToContent = function() {
				if(document.documentElement.getAttribute("sizemode") == "normal")
					return _sizeToContent.apply(this, arguments);
				return undefined;
			};
		}
		else { // Don't resize browser window from tab
			resizeTo = resizeBy = sizeToContent = function disabledInTab() {};
		}
	]]>
	</script>
	<script type="application/javascript" src="chrome://handyclicks/content/globals.js" />
	<script type="application/javascript" src="chrome://handyclicks/content/prefUtils.js" />
	<script type="application/javascript" src="chrome://handyclicks/content/setsUtils.js" />
	<script type="application/javascript" src="chrome://handyclicks/content/sets.js" />
	<script type="application/javascript" src="chrome://handyclicks/content/regSvc.js" />

	<html:link xmlns:html="http://www.w3.org/1999/xhtml" rel="shortcut icon" style="display: none;"
		href="chrome://handyclicks-icon/skin/chrome/icons/default/handyClicks-settings.ico" />

	<hbox id="hc-sets-floatToolbar" />

	<commandset id="hc-sets-cmds">
		<command id="hc-sets-cmd-add" oncommand="handyClicksSets.addItems();" label="&hc.sets.cmdAdd;" />
		<command id="hc-sets-cmd-edit" oncommand="handyClicksSets.editItems();" label="&hc.sets.cmdEdit;" />
		<command id="hc-sets-cmd-editSaved" oncommand="handyClicksSets.editItems(null, true);" label="&hc.sets.cmdEditSaved;" />
		<command id="hc-sets-cmd-editType" oncommand="handyClicksSets.editItemsTypes();" label="&hc.sets.cmdEditType;" />
		<command id="hc-sets-cmd-editSavedType" oncommand="handyClicksSets.editItemsTypes(true);" label="&hc.sets.cmdEditTypeSaved;" />
		<command id="hc-sets-cmd-delete" oncommand="handyClicksSets.deleteItems();" label="&hc.sets.cmdDel;" />

		<command id="hc-sets-cmd-closeEditors" oncommand="handyClicksSets.closeItemEditors();" label="&hc.sets.cmdClose;" />
		<command id="hc-sets-cmd-closeSavedEditors" oncommand="handyClicksSets.closeItemEditors(false);" label="&hc.sets.cmdCloseSaved;" />
		<command id="hc-sets-cmd-closeTypeEditors" oncommand="handyClicksSets.closeItemTypeEditors();" label="&hc.sets.cmdCloseType;" />
		<command id="hc-sets-cmd-closeSavedTypeEditors" oncommand="handyClicksSets.closeItemTypeEditors(false);" label="&hc.sets.cmdCloseTypeSaved;" />

		<command id="hc-sets-cmd-enable" oncommand="handyClicksSets.toggleEnabled(null, true);" label="&hc.sets.cmdEnable;" />
		<command id="hc-sets-cmd-disable" oncommand="handyClicksSets.toggleEnabled(null, false);" label="&hc.sets.cmdDisable;" />
		<command id="hc-sets-cmd-toggle" oncommand="handyClicksSets.toggleEnabled();" label="&hc.sets.cmdToggle;" />

		<command id="hc-sets-cmd-fullExportToFile" oncommand="handyClicksSets.exportSets(false, handyClicksSets.ct.EXPORT_FILEPICKER);"
			label="&hc.sets.fullExportToFile;" />
		<command id="hc-sets-cmd-partialExportToFile" oncommand="handyClicksSets.exportSets(true, handyClicksSets.ct.EXPORT_FILEPICKER);"
			label="&hc.sets.exportSelectedToFile;" />
		<command id="hc-sets-cmd-partialExportToClipboard" oncommand="handyClicksSets.exportSets(true, handyClicksSets.ct.EXPORT_CLIPBOARD_STRING);"
			label="&hc.sets.exportSelectedToClipboard;" />
		<command id="hc-sets-cmd-exportToURI" oncommand="handyClicksSets.exportSets(true, handyClicksSets.ct.EXPORT_CLIPBOARD_URI);"
			label="&hc.sets.exportToURI;" />
		<command id="hc-sets-cmd-exportToHTML" oncommand="handyClicksSets.exportSets(true, handyClicksSets.ct.EXPORT_CLIPBOARD_HTML);"
			label="&hc.sets.exportToHTML;" />

		<command id="hc-sets-cmd-fullImportFromFile" oncommand="handyClicksSets.importSets(false, handyClicksSets.ct.IMPORT_FILEPICKER);" />
		<command id="hc-sets-cmd-importFromFile" oncommand="handyClicksSets.importSets(true, handyClicksSets.ct.IMPORT_FILEPICKER);"
			label="&hc.sets.importFromFile;" />
		<command id="hc-sets-cmd-importFromClipboard" oncommand="handyClicksSets.importSets(true, handyClicksSets.ct.IMPORT_CLIPBOARD);"
			label="&hc.sets.importFromClipboard;" />
		<command id="hc-sets-cmd-importFromClipboard2" oncommand="handyClicksSets.importSets(true, handyClicksSets.ct.IMPORT_CLIPBOARD);"
			label="&hc.sets.importFromClipboard;" />
	</commandset>
	<keyset id="hc-sets-keys">
		<key id="hc-sets-key-add" keycode="VK_INSERT" command="hc-sets-cmd-add" />
		<key id="hc-sets-key-edit" keycode="VK_F4" command="hc-sets-cmd-edit" />
		<key id="hc-sets-key-editSaved" keycode="VK_F4" modifiers="control" command="hc-sets-cmd-editSaved" />
		<key id="hc-sets-key-editType" keycode="VK_F4" modifiers="shift" command="hc-sets-cmd-editType" />
		<key id="hc-sets-key-editSavedType" keycode="VK_F4" modifiers="control,shift" command="hc-sets-cmd-editSavedType" />
		<key id="hc-sets-key-delete" keycode="VK_DELETE" command="hc-sets-cmd-delete" />

		<key id="hc-sets-key-closeEditors" keycode="VK_F8" command="hc-sets-cmd-closeEditors" />
		<key id="hc-sets-key-closeSavedEditors" keycode="VK_F8" modifiers="control" command="hc-sets-cmd-closeSavedEditors" />
		<key id="hc-sets-key-closeTypeEditors" keycode="VK_F8" modifiers="shift" command="hc-sets-cmd-closeTypeEditors" />
		<key id="hc-sets-key-closeSavedTypeEditors" keycode="VK_F8" modifiers="control,shift" command="hc-sets-cmd-closeSavedTypeEditors" />

		<key id="hc-sets-key-enable" key="+" modifiers="control" command="hc-sets-cmd-enable" />
		<key id="hc-sets-key-enable2" key="=" modifiers="control" command="hc-sets-cmd-enable" />
		<key id="hc-sets-key-disable" key="-" modifiers="control" command="hc-sets-cmd-disable" />
		<key id="hc-sets-key-toggle" key="/" modifiers="control" command="hc-sets-cmd-toggle" />
		<key id="hc-sets-key-toggle2" key="\" modifiers="control" command="hc-sets-cmd-toggle" />
		<key id="hc-sets-key-toggle3" key=" " command="hc-sets-cmd-toggle" />

		<key id="hc-sets-key-fullExportToFile" key="e" modifiers="control" command="hc-sets-cmd-fullExportToFile" />
		<key id="hc-sets-key-createBackup" key="b" modifiers="control" oncommand="handyClicksSets.createBackup();" />
		<key id="hc-sets-key-partialExportToFile" key="e" modifiers="control,shift" command="hc-sets-cmd-partialExportToFile" />
		<key id="hc-sets-key-partialExportToClipboard" key="c" modifiers="control,shift" command="hc-sets-cmd-partialExportToClipboard" />
		<key id="hc-sets-key-exportToURI" key="c" modifiers="control" command="hc-sets-cmd-exportToURI" />
		<key id="hc-sets-key-exportToURI2" keycode="VK_INSERT" modifiers="control" command="hc-sets-cmd-exportToURI" />
		<key id="hc-sets-key-exportToHTML" key="h" modifiers="control" command="hc-sets-cmd-exportToHTML" />

		<key id="hc-sets-key-fullImportFromFile" key="i" modifiers="control" command="hc-sets-cmd-fullImportFromFile" />
		<key id="hc-sets-key-importFromFile" key="i" modifiers="control,shift" command="hc-sets-cmd-importFromFile" />
		<!-- Command "hc-sets-cmd-importFromClipboard" updates only on popupshowing -->
		<key id="hc-sets-key-importFromClipboard" key="v" modifiers="control,shift" command="hc-sets-cmd-importFromClipboard2" />
		<key id="hc-sets-key-importFromClipboard2" key="v" modifiers="control" command="hc-sets-cmd-importFromClipboard2" />
		<key id="hc-sets-key-importFromClipboard3" keycode="VK_INSERT" modifiers="shift" command="hc-sets-cmd-importFromClipboard2" />

		<key id="hc-sets-key-selectAll" key="a" modifiers="control" oncommand="handyClicksSets.selectAll();" />
		<key id="hc-sets-key-clearSelection" key="a" modifiers="control,shift" oncommand="handyClicksSets.clearSelection();" />
		<key id="hc-sets-key-invertSelection" key="*" modifiers="control" oncommand="handyClicksSets.invertSelection();" />
		<key id="hc-sets-key-collapseTree" key="&lt;" modifiers="control,shift" oncommand="handyClicksSets.toggleTreeContainers(false, true);" />
		<key id="hc-sets-key-collapseTree2" key="," modifiers="control,shift" oncommand="handyClicksSets.toggleTreeContainers(false, true);" />
		<key id="hc-sets-key-collapseTreeLevel" key="&lt;" modifiers="control" oncommand="handyClicksSets.changeTreeExpandLevel(-1);" />
		<key id="hc-sets-key-collapseTreeLevel2" key="," modifiers="control" oncommand="handyClicksSets.changeTreeExpandLevel(-1);" />
		<key id="hc-sets-key-expandTreeLevel" key="&gt;" modifiers="control" oncommand="handyClicksSets.changeTreeExpandLevel(1);" />
		<key id="hc-sets-key-expandTreeLevel2" key="." modifiers="control" oncommand="handyClicksSets.changeTreeExpandLevel(1);" />
		<key id="hc-sets-key-expandTree" key="&gt;" modifiers="control,shift" oncommand="handyClicksSets.toggleTreeContainers(true, true);" />
		<key id="hc-sets-key-expandTree2" key="." modifiers="control,shift" oncommand="handyClicksSets.toggleTreeContainers(true, true);" />

		<key id="hc-sets-key-focusSearch" key="f" modifiers="control" oncommand="handyClicksSets.focusSearch();" />
		<key id="hc-sets-key-focusSetsTree" key="t" modifiers="control" oncommand="handyClicksSets.focusSetsTree();" />
		<key id="hc-sets-key-toggleFilterMode" key="f" modifiers="control,shift" oncommand="handyClicksSets.toggleFilterMode();" />
		<key id="hc-sets-key-findNext" keycode="VK_F3" oncommand="handyClicksSets.searcher.next();" />
		<key id="hc-sets-key-findPrev" keycode="VK_F3" modifiers="shift" oncommand="handyClicksSets.searcher.prev();" />
		<key id="hc-sets-key-findSelectAll" keycode="VK_F3" modifiers="control" oncommand="handyClicksSets.searcher.selectAll();" />
		<key id="hc-sets-key-switchPanes-ltr" keycode="VK_TAB" modifiers="control" oncommand="handyClicksSets.switchPanes(true);" />
		<key id="hc-sets-key-switchPanes-rtl" keycode="VK_TAB" modifiers="control,shift" oncommand="handyClicksSets.switchPanes(false);" />
		<key id="hc-sets-key-apply" key="s" modifiers="control" oncommand="handyClicksSets.saveSettings(true);" />
		<key id="hc-sets-key-accept" keycode="VK_RETURN" modifiers="control" oncommand="document.documentElement.acceptDialog();" />
		<key id="hc-sets-key-reload" keycode="VK_F5" oncommand="handyClicksSets.reloadSettings();" />
		<key id="hc-sets-key-reload2" key="r" modifiers="control" oncommand="handyClicksSets.reloadSettings();" />
		<key id="hc-sets-key-reloadTree" keycode="VK_F5" modifiers="shift" oncommand="handyClicksSets.reloadSettings(handyClicksSets.RELOAD_TREE);" />
		<key id="hc-sets-key-reloadPrefs" keycode="VK_F5" modifiers="control,shift" oncommand="handyClicksSets.reloadSettings(handyClicksSets.RELOAD_PREFS);" />

		<key id="hc-sets-key-treeDrawMode-normal"         key="1" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(0);" />
		<key id="hc-sets-key-treeDrawMode-normalCompact"  key="2" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(1);" />
		<key id="hc-sets-key-treeDrawMode-normalInline"   key="3" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(2);" />
		<key id="hc-sets-key-treeDrawMode-inverse"        key="4" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(3);" />
		<key id="hc-sets-key-treeDrawMode-inverseCompact" key="5" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(4);" />
		<key id="hc-sets-key-treeDrawMode-inverseInline"  key="6" modifiers="control" oncommand="handyClicksSets.setDrawModeFromKey(5);" />

		<key id="hc-editor-key-openErrorConsole" key="j" modifiers="control,shift" oncommand="handyClicksUtils.openErrorConsole();" />

		<key id="hc-sets-key-maximizeWindow" keycode="VK_F10" oncommand="handyClicksSetsUtils.maximizeWindow();" />
		<key id="hc-sets-key-toggleFullscreen" keycode="VK_F11" oncommand="handyClicksSetsUtils.toggleFullscreen();" />
		<key id="hc-sets-key-toggleOnTop" key="t" modifiers="control,shift" oncommand="handyClicksSetsUtils.toggleOnTop();" />
	</keyset>
	<popupset id="hc-sets-popupset">
		<menupopup id="hc-sets-tree-context"
			onpopupshowing="return handyClicksSets.initTreeMenu();">
			<menuitem id="hc-sets-edit" class="menuitem-iconic hc-iconic" default="true"
				command="hc-sets-cmd-edit" key="hc-sets-key-edit" />
			<menuitem id="hc-sets-editSaved" class="menuitem-iconic hc-iconic"
				command="hc-sets-cmd-editSaved" key="hc-sets-key-editSaved" />
			<menuitem id="hc-sets-editType" class="menuitem-iconic hc-iconic"
				command="hc-sets-cmd-editType" key="hc-sets-key-editType" />
			<menuitem id="hc-sets-editSavedType" class="menuitem-iconic hc-iconic"
				command="hc-sets-cmd-editSavedType" key="hc-sets-key-editSavedType" />

			<menuseparator id="hc-sets-closeEditors-separator" />
			<menuitem id="hc-sets-closeEditors" command="hc-sets-cmd-closeEditors" key="hc-sets-key-closeEditors" />
			<menuitem id="hc-sets-closeSavedEditors" command="hc-sets-cmd-closeSavedEditors" key="hc-sets-key-closeSavedEditors" />
			<menuitem id="hc-sets-closeTypeEditors" command="hc-sets-cmd-closeTypeEditors" key="hc-sets-key-closeTypeEditors" />
			<menuitem id="hc-sets-closeSavedTypeEditors" command="hc-sets-cmd-closeSavedTypeEditors" key="hc-sets-key-closeSavedTypeEditors" />

			<menuseparator />
			<menuitem id="hc-sets-delete" command="hc-sets-cmd-delete" key="hc-sets-key-delete" class="menuitem-iconic hc-iconic" />
			<menuseparator />
			<menuitem command="hc-sets-cmd-add" key="hc-sets-key-add" class="menuitem-iconic hc-iconic" />
			<menuseparator />
			<menuitem command="hc-sets-cmd-enable" key="hc-sets-key-enable" class="menuitem-iconic hc-iconic" />
			<menuitem command="hc-sets-cmd-disable" key="hc-sets-key-disable" class="menuitem-iconic hc-iconic" />
			<menuitem command="hc-sets-cmd-toggle" key="hc-sets-key-toggle" class="menuitem-iconic hc-iconic" />
			<menuseparator />
			<menuitem command="hc-sets-cmd-exportToURI" key="hc-sets-key-exportToURI" />
			<menuitem command="hc-sets-cmd-exportToHTML" key="hc-sets-key-exportToHTML" />
			<menuitem command="hc-sets-cmd-partialExportToClipboard" key="hc-sets-key-partialExportToClipboard" />
			<menuitem command="hc-sets-cmd-partialExportToFile" key="hc-sets-key-partialExportToFile" />
			<menuseparator />
			<menuitem command="hc-sets-cmd-importFromClipboard" key="hc-sets-key-importFromClipboard" />
		</menupopup>
		<menupopup id="hc-sets-prefsManagementPopup" position="before_start">
			<menuitem id="hc-sets-prefs-all" class="menuitem-iconic hc-iconic" label="&hc.sets.allPrefs;"
				oncommand="handyClicksPrefUtils.openAboutConfig();" />
			<menuseparator />
			<menuitem oncommand="handyClicksSets.resetPrefs();" label="&hc.sets.defaults;" />
			<menuseparator class="hc-reloadSettings" />
			<menuitem id="hc-sets-prefs-reload" class="hc-reloadSettings" key="hc-sets-key-reload" label="&hc.sets.reloadAllSettings;"
				oncommand="handyClicksSets.reloadSettings();" />
			<menuitem id="hc-sets-prefs-reloadTree" class="hc-reloadSettings" key="hc-sets-key-reloadTree" label="&hc.sets.reloadTree;"
				oncommand="handyClicksSets.reloadSettings(handyClicksSets.RELOAD_TREE);" />
			<menuitem id="hc-sets-prefs-reloadPrefs" class="hc-reloadSettings" key="hc-sets-key-reloadPrefs" label="&hc.sets.reloadPrefs;"
				oncommand="handyClicksSets.reloadSettings(handyClicksSets.RELOAD_PREFS);" />
			<menuseparator />
			<menuitem id="hc-sets-prefs-miImport" class="menuitem-iconic hc-iconic" label="&hc.sets.importPrefs;"
				oncommand="handyClicksSets.importPrefs();" />
			<menuitem id="hc-sets-prefs-miExport" class="menuitem-iconic hc-iconic" label="&hc.sets.exportPrefs;"
				oncommand="handyClicksSets.exportPrefs();" />
		</menupopup>
		<menupopup id="hc-sets-tree-restoreFromBackupContext"
			onpopupshowing="return (this.triggerNode || document.popupNode).hasAttribute('hc_fileName');">
			<menuitem id="hc-sets-tree-restoreBackupFile" class="menuitem-iconic hc-iconic" default="true" label="&hc.sets.restoreBackup;"
				oncommand="(this.parentNode.triggerNode || document.popupNode).doCommand();" />
			<menuitem id="hc-sets-tree-showBackupFile" class="menuitem-iconic hc-iconic" label="&hc.sets.showBackupFile;"
				oncommand="handyClicksSets.ut.reveal((this.parentNode.triggerNode || document.popupNode).__file);" />
			<menuseparator />
			<menuitem id="hc-sets-removeBackup" class="menuitem-iconic hc-iconic"
				closemenu="single" label="&hc.sets.removeBackup;"
				oncommand="handyClicksSets.removeBackup((this.parentNode.triggerNode || document.popupNode), event);"
				onclick="if(event.button == 1) { handyClicksSets.removeBackup((this.parentNode.triggerNode || document.popupNode), event); this.parentNode.hidePopup(); }" />
		</menupopup>
	</popupset>

</prefwindow>